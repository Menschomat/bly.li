{
  "name": "Frontend-Container - Bun",
  //"image": "mcr.microsoft.com/devcontainers/typescript-node:1-20",
  "dockerComposeFile": [
    "../docker-compose.yml",
    "docker-compose.yml"
  ],
  "service": "frontend-container",
  "workspaceFolder": "/workspace/src/services/front",
  "customizations": {
    "vscode": {
      "extensions": [
        "Angular.ng-template",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "johnpapa.Angular2",
        "ms-azuretools.vscode-docker",
        "christian-kohler.path-intellisense",
        "christian-kohler.npm-intellisense",
        "bradlc.vscode-tailwindcss",
        "redhat.vscode-yaml",
        "formulahendry.auto-rename-tag",
        "formulahendry.auto-close-tag",
        "eamodio.gitlens"
      ]
    },
    "settings": {
      "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
      }
    }
  },
  "forwardPorts": [
    4200
  ],
  "shutdownAction": "stopCompose",
  "postCreateCommand": "echo $BLYLI_FRONT_CONFIG > /workspace/src/services/front/public/assets/dev.config.json && sudo chown -R $(id -u):$(id -g) /workspace/src/services/front/node_modules && npm install -g bun && bun install && sudo apt-get update && sudo apt-get install -y ca-certificates curl gnupg && sudo install -m 0755 -d /etc/apt/keyrings && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg && sudo chmod a+r /etc/apt/keyrings/docker.gpg && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(. /etc/os-release && echo $VERSION_CODENAME) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && sudo apt-get update && sudo apt-get install -y docker-ce-cli",
  "runServices": [
    "zookeeper",
    "mongodb",
    "redis",
    "shortn",
    "blowup",
    "perso",
    "dasher",
    "nginx",
    "prometheus",
    "loki",
    "grafana"
  ],
  "mounts": [
    "type=bind,source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/home/vscode/.ssh,readonly",
    "type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock"
  ]
}