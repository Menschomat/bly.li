services:
  reverse-proxy:
    image: traefik:comte
    environment:
      - TZ=CET
    command:
      - --api
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=traefik:$$2y$$05$$0o2x40VTfE3kHlqVDtk8AOuQQUZXRHTWz9yfq907708wESsdBjBMS"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  #hello_world service can be used for load-testing without flooding public apis
  hello_world:
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.hello_world.loadbalancer.server.port=80"
      - "traefik.http.routers.hello_world.rule=Host(`blyli.localhost`) && PathPrefix(`/hello_world`)"
      - "traefik.http.routers.hello_world.middlewares=hello_world-rewrite"
      - "traefik.http.middlewares.hello_world-rewrite.stripprefix.prefixes=/hello_world"
    image: nginxdemos/hello

  front:
    build:
      context: src/services/front/.
      dockerfile: Dockerfile
    #image: mensch0mat/bly.li.front:main
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.front.loadbalancer.server.port=80"
      - "traefik.http.routers.front.rule=Host(`blyli.localhost`) && PathPrefix(`/front/`)"
      - "traefik.http.routers.front.middlewares=front-rewrite"
      - "traefik.http.middlewares.front-rewrite.stripprefix.prefixes=/front"

  shortn:
    build:
      context: src/.
      dockerfile: Shortn.Dockerfile
    #image: mensch0mat/bly.li.shortn:latest
    environment:
      # Add your own OIDC-Stuff in here!
      - OIDC_URL=https://auth.example.com/application/o/bly_li/
      - OIDC_CLIENT_ID=k3dYMpcohEinbEaTpaJEb2ZsHKs7ouRkRYFtx4QM
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.shortn.loadbalancer.server.port=8080"
      - "traefik.http.routers.shortn.rule=Host(`blyli.localhost`) && PathPrefix(`/shortn`)"
      - "traefik.http.routers.shortn.middlewares=shortn-rewrite"
      - "traefik.http.middlewares.shortn-rewrite.stripprefix.prefixes=/shortn"

  blowup:
    build:
      context: src/.
      dockerfile: Blowup.Dockerfile
    #image: mensch0mat/bly.li.blowup:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.blowup.loadbalancer.server.port=8080"
      - "traefik.http.routers.blowup.rule=Host(`blyli.localhost`)"
      - "traefik.http.middlewares.add-context.redirectregex.regex=^http:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.add-context.redirectregex.replacement=http://$$1/front/"
      - "traefik.http.routers.blowup.middlewares=add-context"

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local
